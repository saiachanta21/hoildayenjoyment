{"ast":null,"code":"var _jsxFileName = \"D:\\\\entertainmentapp\\\\entertainment\\\\src\\\\Pages\\\\Series\\\\Series.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Series = () => {\n  _s();\n\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const genreforURL = useGenre(selectedGenres); // console.log(selectedGenres);\n\n  const fetchMovies = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=74f5938285ff4cb9d571ebcf8646ab9c&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`);\n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pageTitle\",\n      children: \"Tv Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Genres, {\n      type: \"tv\",\n      selectedGenres: selectedGenres,\n      setSelectedGenres: setSelectedGenres,\n      genres: genres,\n      setGenres: setGenres,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.id,\n        poster: c.poster_path,\n        title: c.title || c.name,\n        date: c.first_air_date || c.release_date,\n        media_type: \"movie\",\n        vote_average: c.vote_average\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), numOfPages > 1 && /*#__PURE__*/_jsxDEV(CustomPagination, {\n      setPage: setPage,\n      numOfPages: numOfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Series, \"ydL93XZdwa0OcQKvkw0idTDWR+c=\", true);\n\n_c = Series;\nexport default Series;\n\nvar _c;\n\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["React","Series","genres","setGenres","useState","selectedGenres","setSelectedGenres","page","setPage","content","setContent","numOfPages","setNumOfPages","genreforURL","useGenre","fetchMovies","data","axios","get","results","total_pages","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average"],"sources":["D:/entertainmentapp/entertainment/src/Pages/Series/Series.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Series = () => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [content, setContent] = useState([]);\r\n  const [numOfPages, setNumOfPages] = useState();\r\n  const genreforURL = useGenre(selectedGenres);\r\n  // console.log(selectedGenres);\r\n\r\n  const fetchMovies = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/discover/tv?api_key=74f5938285ff4cb9d571ebcf8646ab9c&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`\r\n    );\r\n    setContent(data.results);\r\n    setNumOfPages(data.total_pages);\r\n  };\r\n  return (\r\n    <div> \r\n        <span className='pageTitle'>Tv Series</span>\r\n        <Genres\r\n          type=\"tv\"\r\n          selectedGenres={selectedGenres}\r\n          setSelectedGenres={setSelectedGenres}\r\n          genres={genres}\r\n          setGenres={setGenres}\r\n          setPage={setPage}\r\n        />\r\n      <div className=\"trending\">\r\n        {content &&\r\n          content.map((c) => (\r\n            <SingleContent\r\n              key={c.id}\r\n              id={c.id}\r\n              poster={c.poster_path}\r\n              title={c.title || c.name}\r\n              date={c.first_air_date || c.release_date}\r\n              media_type=\"movie\"\r\n              vote_average={c.vote_average}\r\n            />\r\n          ))}\r\n      </div>\r\n      {numOfPages > 1 && (\r\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Series"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCF,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;EACA,MAAMS,WAAW,GAAGC,QAAQ,CAACT,cAAD,CAA5B,CANmB,CAOnB;;EAEA,MAAMU,WAAW,GAAG,YAAY;IAC9B,MAAM;MAAEC;IAAF,IAAW,MAAMC,KAAK,CAACC,GAAN,CACpB,yKAAwKX,IAAK,gBAAeM,WAAY,EADpL,CAAvB;IAGAH,UAAU,CAACM,IAAI,CAACG,OAAN,CAAV;IACAP,aAAa,CAACI,IAAI,CAACI,WAAN,CAAb;EACD,CAND;;EAOA,oBACE;IAAA,wBACI;MAAM,SAAS,EAAC,WAAhB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,MAAD;MACE,IAAI,EAAC,IADP;MAEE,cAAc,EAAEf,cAFlB;MAGE,iBAAiB,EAAEC,iBAHrB;MAIE,MAAM,EAAEJ,MAJV;MAKE,SAAS,EAAEC,SALb;MAME,OAAO,EAAEK;IANX;MAAA;MAAA;MAAA;IAAA,QAFJ,eAUE;MAAK,SAAS,EAAC,UAAf;MAAA,UACGC,OAAO,IACNA,OAAO,CAACY,GAAR,CAAaC,CAAD,iBACV,QAAC,aAAD;QAEE,EAAE,EAAEA,CAAC,CAACC,EAFR;QAGE,MAAM,EAAED,CAAC,CAACE,WAHZ;QAIE,KAAK,EAAEF,CAAC,CAACG,KAAF,IAAWH,CAAC,CAACI,IAJtB;QAKE,IAAI,EAAEJ,CAAC,CAACK,cAAF,IAAoBL,CAAC,CAACM,YAL9B;QAME,UAAU,EAAC,OANb;QAOE,YAAY,EAAEN,CAAC,CAACO;MAPlB,GACOP,CAAC,CAACC,EADT;QAAA;QAAA;QAAA;MAAA,QADF;IAFJ;MAAA;MAAA;MAAA;IAAA,QAVF,EAwBGZ,UAAU,GAAG,CAAb,iBACC,QAAC,gBAAD;MAAkB,OAAO,EAAEH,OAA3B;MAAoC,UAAU,EAAEG;IAAhD;MAAA;MAAA;MAAA;IAAA,QAzBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CA9CD;;GAAMV,M;;KAAAA,M;AAgDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}