{"ast":null,"code":"var _jsxFileName = \"D:\\\\entertainmentapp\\\\entertainment\\\\src\\\\Pages\\\\Movies\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Genres from \"../../components/Genres\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport useGenre from \"../../hooks/useGenres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const genreforURL = useGenre(selectedGenres); // console.log(selectedGenres);\n\n  const fetchMovies = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`);\n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchMovies(); // eslint-disable-next-line\n  }, [genreforURL, page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pageTitle\",\n      children: \"Discover Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Genres, {\n      type: \"movie\",\n      selectedGenres: selectedGenres,\n      setSelectedGenres: setSelectedGenres,\n      genres: genres,\n      setGenres: setGenres,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.id,\n        poster: c.poster_path,\n        title: c.title || c.name,\n        date: c.first_air_date || c.release_date,\n        media_type: \"movie\",\n        vote_average: c.vote_average\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), numOfPages > 1 && /*#__PURE__*/_jsxDEV(CustomPagination, {\n      setPage: setPage,\n      numOfPages: numOfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"XK1YKfc94s2l+Ob0biLUcn7v/6s=\", false, function () {\n  return [useGenre];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["axios","useEffect","useState","Genres","SingleContent","CustomPagination","useGenre","Movies","genres","setGenres","selectedGenres","setSelectedGenres","page","setPage","content","setContent","numOfPages","setNumOfPages","genreforURL","fetchMovies","data","get","results","total_pages","window","scroll","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average"],"sources":["D:/entertainmentapp/entertainment/src/Pages/Movies/Movies.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Genres from \"../../components/Genres\";\r\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\r\n\r\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\r\nimport useGenre from \"../../hooks/useGenres\";\r\n\r\nconst Movies = () => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [content, setContent] = useState([]);\r\n  const [numOfPages, setNumOfPages] = useState();\r\n  const genreforURL = useGenre(selectedGenres);\r\n  // console.log(selectedGenres);\r\n\r\n  const fetchMovies = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`\r\n    );\r\n    setContent(data.results);\r\n    setNumOfPages(data.total_pages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n    fetchMovies();\r\n    // eslint-disable-next-line\r\n  }, [genreforURL, page]);\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"pageTitle\">Discover Movies</span>\r\n      <Genres\r\n        type=\"movie\"\r\n        selectedGenres={selectedGenres}\r\n        setSelectedGenres={setSelectedGenres}\r\n        genres={genres}\r\n        setGenres={setGenres}\r\n        setPage={setPage}\r\n      />\r\n      <div className=\"trending\">\r\n        {content &&\r\n          content.map((c) => (\r\n            <SingleContent\r\n              key={c.id}\r\n              id={c.id}\r\n              poster={c.poster_path}\r\n              title={c.title || c.name}\r\n              date={c.first_air_date || c.release_date}\r\n              media_type=\"movie\"\r\n              vote_average={c.vote_average}\r\n            />\r\n          ))}\r\n      </div>\r\n      {numOfPages > 1 && (\r\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AAEA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,EAA5C;EACA,MAAMgB,WAAW,GAAGZ,QAAQ,CAACI,cAAD,CAA5B,CANmB,CAOnB;;EAEA,MAAMS,WAAW,GAAG,YAAY;IAC9B,MAAM;MAAEC;IAAF,IAAW,MAAMpB,KAAK,CAACqB,GAAN,CACpB,4IAA2IT,IAAK,gBAAeM,WAAY,EADvJ,CAAvB;IAGAH,UAAU,CAACK,IAAI,CAACE,OAAN,CAAV;IACAL,aAAa,CAACG,IAAI,CAACG,WAAN,CAAb;EACD,CAND;;EAQAtB,SAAS,CAAC,MAAM;IACduB,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,CAAjB;IACAN,WAAW,GAFG,CAGd;EACD,CAJQ,EAIN,CAACD,WAAD,EAAcN,IAAd,CAJM,CAAT;EAMA,oBACE;IAAA,wBACE;MAAM,SAAS,EAAC,WAAhB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MACE,IAAI,EAAC,OADP;MAEE,cAAc,EAAEF,cAFlB;MAGE,iBAAiB,EAAEC,iBAHrB;MAIE,MAAM,EAAEH,MAJV;MAKE,SAAS,EAAEC,SALb;MAME,OAAO,EAAEI;IANX;MAAA;MAAA;MAAA;IAAA,QAFF,eAUE;MAAK,SAAS,EAAC,UAAf;MAAA,UACGC,OAAO,IACNA,OAAO,CAACY,GAAR,CAAaC,CAAD,iBACV,QAAC,aAAD;QAEE,EAAE,EAAEA,CAAC,CAACC,EAFR;QAGE,MAAM,EAAED,CAAC,CAACE,WAHZ;QAIE,KAAK,EAAEF,CAAC,CAACG,KAAF,IAAWH,CAAC,CAACI,IAJtB;QAKE,IAAI,EAAEJ,CAAC,CAACK,cAAF,IAAoBL,CAAC,CAACM,YAL9B;QAME,UAAU,EAAC,OANb;QAOE,YAAY,EAAEN,CAAC,CAACO;MAPlB,GACOP,CAAC,CAACC,EADT;QAAA;QAAA;QAAA;MAAA,QADF;IAFJ;MAAA;MAAA;MAAA;IAAA,QAVF,EAwBGZ,UAAU,GAAG,CAAb,iBACC,QAAC,gBAAD;MAAkB,OAAO,EAAEH,OAA3B;MAAoC,UAAU,EAAEG;IAAhD;MAAA;MAAA;MAAA;IAAA,QAzBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CArDD;;GAAMT,M;UAMgBD,Q;;;KANhBC,M;AAuDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}